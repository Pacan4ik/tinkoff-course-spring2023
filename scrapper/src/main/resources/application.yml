app:
  scheduler:
    enable: true
    interval: 10000
    link-checking-frequency: 5m

  bot:
    base-url: http://localhost:8090/
    back-off:
      delay: 500ms
      policy: exponential
      max-attempts: 10
      multiplier: 2
      additional-statuses:
        - 429

  data-base-access-type: jpa
  rate-limiting:
    requests-limit: 15
    time-duration: 1m
  sending-method: queue
  kafka:
    bot-producer-topic: ru.andryxx.botupdates
    gitworker-producer-topic: ru.andryxx.gitrequests
    stackworker-producer-topic: ru.andryxx.stackrequests
    habrworker-producer-topic: ru.andryxx.habrrequests
    workers-consumer-topic: ru.andryxx.workerupdates
spring:
  application:
    name: scrapper
  datasource:
    url: jdbc:postgresql://localhost:5432/scrapper
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  liquibase:
    enabled: false
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    consumer:
      group-id: "instance.scrapper"
server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  api-docs:
    enabled: true
    path: /swagger-ui.html

management:
  server:
    port: 8081
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus
      path-mapping:
        prometheus: /metrics
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    health:
      show-details: always
